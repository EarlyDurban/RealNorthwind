//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RealNorthwindClient.ProductServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceRef.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        MyWCFServices.RealNorthwindService.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        System.Threading.Tasks.Task<MyWCFServices.RealNorthwindService.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        RealNorthwindClient.ProductServiceRef.UpdateProductResponse UpdateProduct(RealNorthwindClient.ProductServiceRef.UpdateProductRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        System.Threading.Tasks.Task<RealNorthwindClient.ProductServiceRef.UpdateProductResponse> UpdateProductAsync(RealNorthwindClient.ProductServiceRef.UpdateProductRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateProduct", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public MyWCFServices.RealNorthwindService.Product product;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public UpdateProductRequest() {
        }
        
        public UpdateProductRequest(MyWCFServices.RealNorthwindService.Product product, string message) {
            this.product = product;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateProductResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateProductResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateProductResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public UpdateProductResponse() {
        }
        
        public UpdateProductResponse(bool UpdateProductResult, string message) {
            this.UpdateProductResult = UpdateProductResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : RealNorthwindClient.ProductServiceRef.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<RealNorthwindClient.ProductServiceRef.IProductService>, RealNorthwindClient.ProductServiceRef.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyWCFServices.RealNorthwindService.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<MyWCFServices.RealNorthwindService.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RealNorthwindClient.ProductServiceRef.UpdateProductResponse RealNorthwindClient.ProductServiceRef.IProductService.UpdateProduct(RealNorthwindClient.ProductServiceRef.UpdateProductRequest request) {
            return base.Channel.UpdateProduct(request);
        }
        
        public bool UpdateProduct(MyWCFServices.RealNorthwindService.Product product, ref string message) {
            RealNorthwindClient.ProductServiceRef.UpdateProductRequest inValue = new RealNorthwindClient.ProductServiceRef.UpdateProductRequest();
            inValue.product = product;
            inValue.message = message;
            RealNorthwindClient.ProductServiceRef.UpdateProductResponse retVal = ((RealNorthwindClient.ProductServiceRef.IProductService)(this)).UpdateProduct(inValue);
            message = retVal.message;
            return retVal.UpdateProductResult;
        }
        
        public System.Threading.Tasks.Task<RealNorthwindClient.ProductServiceRef.UpdateProductResponse> UpdateProductAsync(RealNorthwindClient.ProductServiceRef.UpdateProductRequest request) {
            return base.Channel.UpdateProductAsync(request);
        }
    }
}
